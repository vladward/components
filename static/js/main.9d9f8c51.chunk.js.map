{"version":3,"sources":["components/Accordion/Accordion.tsx","components/OnOff/OnOff.tsx","components/Rating/Rating.tsx","Memo/UseMemo.stories.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Accordion","props","AccordionTitle","title","titleValue","onChange","collapsed","AccordionBody","items","onClick","style","cursor","e","map","i","index","value","OnOff","styleOn","width","height","border","display","marginRight","backgroundColor","styleOff","styleIndicator","borderRadius","marginLeft","Rating","Star","selected","UseMemoStories","resultA","useState","a","setA","b","setB","resultB","useMemo","tempResultA","fake","Math","random","currentTarget","PageTitle","App","ratingValue","setRatingValue","accordionCollapsed","setAccordionCollapsed","on","setOn","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d9f8c51.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\ntype ItemsType = {\r\n    title: string\r\n    value: any\r\n}\r\n\r\nexport type AccordionPropsType = {\r\n    titleValue: string\r\n    collapsed: boolean\r\n    onChange: () => void\r\n    items: ItemsType[]\r\n    onClick: (value: string) => void\r\n}\r\nexport type AccordionTitlePropsValue = {\r\n    title: string\r\n    collapsed: boolean\r\n    onChange: () => void\r\n}\r\nexport type AccordionBodyPropsType = {\r\n    items: ItemsType[]\r\n    onClick: (value: string) => void\r\n}\r\n\r\nexport function Accordion(props: AccordionPropsType) {\r\n    return (\r\n        <div>\r\n            <AccordionTitle title={props.titleValue} onChange={props.onChange} collapsed={props.collapsed}/>\r\n            {props.collapsed && <AccordionBody items={props.items} onClick={props.onClick}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction AccordionTitle(props: AccordionTitlePropsValue) {\r\n    return <h3 style={{ cursor: 'pointer' }} onClick={(e) => props.onChange()}>\r\n        {props.title}\r\n    </h3>\r\n}\r\n\r\nfunction AccordionBody(props: AccordionBodyPropsType) {\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {props.items.map( (i, index) => <li key={index} style={{cursor: 'pointer'}} onClick={() => props.onClick(i.value)}>{i.title}</li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport type onType = {\r\n    value: boolean\r\n    onChange: (value: boolean) => void\r\n}\r\n\r\nexport const OnOff = (props: onType) => {\r\n    const styleOn = {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        border: \"1px solid black\",\r\n        display: \"inline-block\",\r\n        marginRight: \"5px\",\r\n        backgroundColor: props.value ? \"green\" : \"white\",\r\n        cursor: \"pointer\"\r\n    }\r\n    const styleOff = {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        border: \"1px solid black\",\r\n        display: \"inline-block\",\r\n        backgroundColor: props.value ? \"white\" : \"red\",\r\n        cursor: \"pointer\"\r\n\r\n    }\r\n    const styleIndicator = {\r\n        width: \"10px\",\r\n        height: \"10px\",\r\n        border: \"1px solid black\",\r\n        borderRadius: \"50%\",\r\n        display: \"inline-block\",\r\n        marginLeft: \"10px\",\r\n        backgroundColor: props.value ? \"green\" : \"red\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={styleOn} onClick={ () => props.onChange(!props.value)}>On</div>\r\n            <div style={styleOff} onClick={ () => props.onChange(!props.value)}>Off</div>\r\n            <div style={styleIndicator}></div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\"\r\n\r\nexport type RatingValueType = 0 | 1 | 2 | 3 | 4 | 5\r\n\r\ntype RatingPropsType = {\r\n    value: RatingValueType\r\n    onClick: (value: RatingValueType) => void\r\n}\r\n\r\ntype StarPropsType = {\r\n    selected: boolean\r\n    onClick: (value: RatingValueType) => void\r\n    value: RatingValueType\r\n}\r\n\r\nexport function Rating(props: RatingPropsType) {\r\n        return (\r\n        <div>\r\n            <Star selected={props.value > 0} onClick={props.onClick} value={1}/>\r\n            <Star selected={props.value > 1} onClick={props.onClick} value={2}/>\r\n            <Star selected={props.value > 2} onClick={props.onClick} value={3}/>\r\n            <Star selected={props.value > 3} onClick={props.onClick} value={4}/>\r\n            <Star selected={props.value > 4} onClick={props.onClick} value={5}/>\r\n        </div>\r\n        )\r\n}\r\n\r\nfunction Star(props: StarPropsType) {\r\n    return (\r\n            <span onClick={() => { props.onClick(props.value) }}>\r\n                {props.selected ? <b> star</b> : \" star\"}\r\n            </span>\r\n    )\r\n}","import React, {useCallback, useMemo, useState} from 'react';\r\n\r\nexport const UseMemoStories = () => {\r\n    const [a, setA] = useState<number>(5)\r\n    const [b, setB] = useState<number>(5)\r\n    let resultA = 1\r\n    let resultB = 1\r\n\r\n    resultA = useMemo(() => {\r\n        let tempResultA = 1;\r\n        for (let i = 1; i <= a; i++) {\r\n            let fake = 0\r\n            while (fake < 1000000) {\r\n                fake++\r\n                const fakeValue = Math.random()\r\n            }\r\n            tempResultA *= 1 //       tempResultA = tempResultA * 1\r\n        }\r\n        return tempResultA\r\n    }, [a])\r\n\r\n\r\n    for (let i = 1; i <= b; i++) {\r\n        resultB = resultB * i\r\n    }\r\n    return (\r\n        <div>\r\n            <input value={a} onChange={(e) => setA(+e.currentTarget.value)}/>\r\n            <input value={b} onChange={(e) => setB(+e.currentTarget.value)}/>\r\n            <hr/>\r\n            <div>\r\n                Result for a: {resultA}\r\n            </div>\r\n            <div>\r\n                Result for b: {resultB}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nconst UsersSecret = (props: { users: Array<string> }) => {\r\n    console.log('users secret')\r\n    return <div>\r\n        {props.users.map((u, i) => <div key={i}>{u}</div>)}\r\n    </div>\r\n}\r\n\r\nconst Users = React.memo(UsersSecret)\r\n\r\nexport const HelpsToReactMemo = () => {\r\n    console.log('HelpsToReactMemo')\r\n    const [counter, setCounter] = useState(0)\r\n    const [users, setUsers] = useState([\"Vlad\", \"Andrey\", \"Katya\", \"Yulya\"])\r\n\r\n    const newArray = useMemo(() => {\r\n        const newArray = users.filter(u => u.toLowerCase().indexOf('a') > -1)\r\n        return newArray\r\n    }, [users])\r\n\r\n    const addUser = () => {\r\n        const newUsers = [...users, 'Sveta' + new Date().getTime()]\r\n        setUsers(newUsers)\r\n    }\r\n\r\n    return <>\r\n        <button onClick={() => setCounter((counter + 1))}>+</button>\r\n        <button onClick={() => addUser()}>addUser</button>\r\n        {counter}\r\n        <Users users={newArray}/>\r\n    </>\r\n}","import React, {useState} from 'react'\r\nimport './App.css'\r\nimport {Accordion} from './components/Accordion/Accordion'\r\nimport {OnOff} from './components/OnOff/OnOff';\r\nimport {Rating, RatingValueType} from './components/Rating/Rating'\r\nimport {UseMemoStories} from \"./Memo/UseMemo.stories\";\r\n\r\nfunction App() {\r\n\r\n    let [ratingValue, setRatingValue] = useState<RatingValueType>(0)\r\n    let [accordionCollapsed, setAccordionCollapsed] = useState<boolean>(false)\r\n    const [on, setOn] = useState<boolean>(false)\r\n    return (\r\n        <div>\r\n            <PageTitle title={\"MyFriends\"} />\r\n            <PageTitle title={\"Welcome to my app\"} />\r\n\r\n            <Accordion items={[]} onClick={() => {}} titleValue={\"Clickable Menu\"} collapsed={accordionCollapsed} onChange={() => setAccordionCollapsed(!accordionCollapsed)}/>\r\n            <Rating value={ratingValue} onClick={setRatingValue}/>\r\n            <OnOff value={on} onChange={setOn}/>\r\n            <UseMemoStories/>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype PageTitlePropsType = {\r\n    title: string\r\n}\r\n\r\nfunction PageTitle(props: PageTitlePropsType) {\r\n    return <h1>{props.title}</h1>\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}